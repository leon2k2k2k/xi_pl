Steps to make a basic aplite-k8s operator:

Part I. practice with k8s and Docker
1. Learn how to wrap a backend in docker, then put it on k8s and communicate with it.
2. Do able to do js-py with one of the backend (py) on the server.

DONE!!!
Part II. Backend
1. write a simple Python backend which aims to create a nginx deployment.
2. Have it running as a pod, and can be called from the outside in the same way Aplite frontend functions can.



Now on to part III

Part III. Frontend 
Need to add in the transport syntax.
1. Parse create_nginx_deployment: k8s UnitType through the frontend.
1.5 Figure out how to factor this out in xi-k8s, aka don't have to add it into the xi-frontend.
2. Change the frontend so that transport and import are more similiar. 
   More importantly, we can transport from another "library" which is really a service that we can talk to.
   The syntax should be 
3. Make everything work!!!

That will be pretty cool to do!

Questions:
How do we transport a type T: Type that is only defined remotely? I think that this 
is the right way to do things, types should be able to be transported just as terms.
Here's an example: 
Deployment : Type should be an object remotely defined on the k8s library. 
In our language, for the frontend (for all purposes), they are treated the same as any other object 
in the context. However, then say we have nginx_deploment : Deployment another term that is 
defined on the k8s library, then the question is how do we transport that term? On the client side,
how do we know how to get that term?